{"ast":null,"code":"var _jsxFileName = \"/Users/vinsol/Documents/React_Exercises/React_Exercise_1/src/pomodoro_clock.js\";\nimport React from 'react';\nimport { formatTime } from './helper.js';\nconst pomodoroData = {\n  pomodoroText: \"Pomodoro\",\n  shortBreakText: \"Short Break\",\n  longBreakText: \"Long Break\",\n  loopText: \"Loop\",\n  pomodoroType: 'pomodoro',\n  shortBreakType: 'shortBreak',\n  longBreakType: 'longBreak',\n  loopType: \"loop\"\n};\n\nfunction Button(props) {\n  return React.createElement(\"li\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: props.onClick,\n    value: props.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.buttonText));\n}\n\nclass TimerOption extends React.Component {\n  renderButton(buttonText, timerType) {\n    return React.createElement(Button, {\n      buttonText: buttonText,\n      onClick: this.props.onClick,\n      type: timerType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"links\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.renderButton(this.props.pomodoroData.pomodoroText, this.props.pomodoroData.pomodoroType), this.renderButton(this.props.pomodoroData.shortBreakText, this.props.pomodoroData.shortBreakType), this.renderButton(this.props.pomodoroData.longBreakText, this.props.pomodoroData.longBreakType), this.renderButton(this.props.pomodoroData.loopText, this.props.pomodoroData.loopType)));\n  }\n\n}\n\nfunction Countdown(props) {\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, formatTime(props.time));\n}\n\n;\n\nfunction Reset(props) {\n  return React.createElement(\"button\", {\n    onClick: props.onClickReset,\n    className: \"btn reset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Reset\");\n}\n\n;\n\nclass Control extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onClickHandler = () => {\n      if (this.props.paused) {\n        this.props.start();\n      } else {\n        this.props.stop();\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      className: this.props.paused ? \"btn paused\" : \"btn play\",\n      onClick: this.onClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.props.paused ? \"play\" : \"pause\");\n  }\n\n}\n\nclass PomodoroClock extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.tick = () => {\n      if (this.state.isLoopCounter) {\n        this.handleLoop();\n      } else if (!this.state.timer) {\n        clearInterval(this.interval);\n      } else {\n        this.setState({\n          timer: this.state.timer - 1\n        });\n      }\n    };\n\n    this.startTimer = () => {\n      this.interval = setInterval(this.tick, 1000);\n      this.setState({\n        paused: false,\n        isCountingDown: true\n      });\n    };\n\n    this.stopTimer = () => {\n      clearInterval(this.interval);\n      this.setState({\n        paused: true,\n        isCountingDown: false\n      });\n    };\n\n    this.reset = () => {\n      this.setState({\n        timer: this.state.startTime,\n        paused: true,\n        isCountingDown: false\n      });\n      clearInterval(this.interval);\n    };\n\n    this.state = {\n      timer: '',\n      startTime: '',\n      isLoopCounter: false,\n      isPomodoroPassed: false,\n      paused: true,\n      counters: {\n        pomodoro: {\n          initValue: 1500,\n          name: 'pomodoro duration'\n        },\n        shortBreak: {\n          initValue: 300,\n          name: 'short break duration'\n        },\n        longBreak: {\n          initValue: 600,\n          name: 'long break duration'\n        }\n      },\n      currentCounter: '',\n      currentCounterInitValue: 0,\n      pomodorosPassed: 0,\n      isCountingDown: false\n    };\n    this.tick = this.tick.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.reset = this.reset.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    let targetButton = event.target.value;\n\n    if (targetButton === `${pomodoroData.pomodoroType}`) {\n      this.setState({\n        timer: this.state.counters.pomodoro.initValue,\n        startTime: this.state.counters.pomodoro.initValue\n      });\n    } else if (targetButton === `${pomodoroData.shortBreakType}`) {\n      this.setState({\n        timer: this.state.counters.shortBreak.initValue,\n        startTime: this.state.counters.shortBreak.initValue\n      });\n    } else if (targetButton === `${pomodoroData.longBreakType}`) {\n      this.setState({\n        timer: this.state.counters.longBreak.initValue,\n        startTime: this.state.counters.longBreak.initValue\n      });\n    } else if (targetButton === `${pomodoroData.loopType}`) {\n      this.setState({\n        isLoopCounter: true,\n        currentCounter: 'pomodoro',\n        timer: this.state.counters.pomodoro.initValue,\n        startTime: this.state.counters.pomodoro.initValue\n      });\n    }\n  }\n\n  handleLoop() {\n    if (this.state.timer >= 1) {\n      this.setState({\n        timer: this.state.timer - 1\n      });\n    } else {\n      this.setPomodorosPassed();\n      this.setNextCounter();\n    }\n  }\n\n  setPomodorosPassed() {\n    let pomodorosPassed = this.state.pomodorosPassed;\n\n    if (this.state.currentCounter === 'pomodoro') {\n      pomodorosPassed++;\n      this.setState({\n        pomodorosPassed: pomodorosPassed\n      });\n    }\n  }\n\n  setNextCounter() {\n    let nextCounter = '';\n\n    if (this.state.currentCounter === 'pomodoro') {\n      nextCounter = this.state.pomodorosPassed % 4 === 0 ? 'longBreak' : 'shortBreak';\n    } else {\n      nextCounter = 'pomodoro';\n    }\n\n    this.setState({\n      currentCounter: nextCounter,\n      currentCounterInitValue: this.state.counters[nextCounter].initValue,\n      timer: this.state.currentCounterInitValue,\n      startTime: this.state.currentCounterInitValue\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"timerContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Pomodoro Clock\"), React.createElement(TimerOption, {\n      pomodoroData: pomodoroData,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(Countdown, {\n      time: this.state.timer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(Control, {\n      paused: this.state.paused,\n      start: this.startTimer,\n      stop: this.stopTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(Reset, {\n      onClickReset: this.reset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default PomodoroClock;","map":{"version":3,"sources":["/Users/vinsol/Documents/React_Exercises/React_Exercise_1/src/pomodoro_clock.js"],"names":["React","formatTime","pomodoroData","pomodoroText","shortBreakText","longBreakText","loopText","pomodoroType","shortBreakType","longBreakType","loopType","Button","props","onClick","type","buttonText","TimerOption","Component","renderButton","timerType","render","Countdown","time","Reset","onClickReset","Control","onClickHandler","paused","start","stop","PomodoroClock","constructor","tick","state","isLoopCounter","handleLoop","timer","clearInterval","interval","setState","startTimer","setInterval","isCountingDown","stopTimer","reset","startTime","isPomodoroPassed","counters","pomodoro","initValue","name","shortBreak","longBreak","currentCounter","currentCounterInitValue","pomodorosPassed","bind","handleClick","event","targetButton","target","value","setPomodorosPassed","setNextCounter","nextCounter"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {formatTime} from './helper.js'\n\nconst pomodoroData = {\n  pomodoroText: \"Pomodoro\",\n  shortBreakText: \"Short Break\",\n  longBreakText: \"Long Break\",\n  loopText: \"Loop\",\n  pomodoroType:'pomodoro',\n  shortBreakType:'shortBreak',\n  longBreakType:'longBreak',\n  loopType: \"loop\",\n}\n\nfunction Button(props) {\n  return (\n    <li className=\"list\">\n      <button onClick={props.onClick} value={props.type}>{props.buttonText}</button>\n    </li>\n  );\n}\n\nclass TimerOption extends React.Component {\n  renderButton(buttonText, timerType) {\n   return <Button \n    buttonText={buttonText}\n    onClick={this.props.onClick}\n    type={timerType}/>\n  }\n  render() {\n    return (\n      <div>\n        <ul className=\"links\">\n          {this.renderButton(this.props.pomodoroData.pomodoroText, this.props.pomodoroData.pomodoroType)}\n          {this.renderButton(this.props.pomodoroData.shortBreakText, this.props.pomodoroData.shortBreakType)}\n          {this.renderButton(this.props.pomodoroData.longBreakText, this.props.pomodoroData.longBreakType)}\n          {this.renderButton(this.props.pomodoroData.loopText, this.props.pomodoroData.loopType)}\n        </ul>\n      </div>\n    );\n  }\n}\n\nfunction Countdown(props) {\n\treturn (\n\t\t<h1>\n\t\t\t{formatTime(props.time)}\n\t\t</h1>\n\t);\n};\n\nfunction Reset(props) {\n\treturn (\n\t\t<button onClick={props.onClickReset} className=\"btn reset\">\n\t\t\tReset\n\t\t</button>\n\t);\n};\n\nclass Control extends React.Component {\n  onClickHandler = () => {\n    if(this.props.paused){\n      this.props.start();\n    }\n    else{\n      this.props.stop();\n    }\n  }\n\trender() {\n\t\treturn (\n\t\t\t<button className={this.props.paused ? \"btn paused\" : \"btn play\"} onClick={this.onClickHandler}>\n\t\t    {this.props.paused ? \"play\" : \"pause\"}\n\t\t  </button>\n\t\t);\n\t}\n}\n\nclass PomodoroClock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: '',\n      startTime: '',\n      isLoopCounter: false,\n      isPomodoroPassed: false,\n      paused: true,\n      counters: {\n        pomodoro: {\n          initValue: 1500,\n          name: 'pomodoro duration',\n        },\n        shortBreak: {\n          initValue: 300,\n          name: 'short break duration',\n        },\n        longBreak: {\n          initValue: 600,\n          name: 'long break duration',\n        }\n      },\n      currentCounter: '',\n      currentCounterInitValue: 0,\n      pomodorosPassed: 0,\n      isCountingDown: false,\n    };\n    this.tick = this.tick.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.reset = this.reset.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  \n  handleClick(event) {\n    let targetButton = event.target.value;\n    if(targetButton === `${pomodoroData.pomodoroType}`) {\n      this.setState({\n        timer: this.state.counters.pomodoro.initValue,\n        startTime: this.state.counters.pomodoro.initValue,\n      });\n    }\n    else if (targetButton === `${pomodoroData.shortBreakType}`) {\n      this.setState({\n        timer: this.state.counters.shortBreak.initValue,\n        startTime: this.state.counters.shortBreak.initValue,\n      });  \n    }\n    else if (targetButton === `${pomodoroData.longBreakType}`) {\n      this.setState({\n        timer: this.state.counters.longBreak.initValue,\n        startTime: this.state.counters.longBreak.initValue,\n      });\n    }\n    else if (targetButton === `${pomodoroData.loopType}`) {\n      this.setState({\n        isLoopCounter: true,\n        currentCounter: 'pomodoro',\n        timer: this.state.counters.pomodoro.initValue,\n        startTime: this.state.counters.pomodoro.initValue,\n      });\n    }\n  }\n\n  handleLoop() {\n    if(this.state.timer >= 1) {\n      this.setState({ timer: this.state.timer - 1 });\n    } else {\n      this.setPomodorosPassed();\n      this.setNextCounter();\n    }\n  }\n\n  setPomodorosPassed() {\n    let pomodorosPassed = this.state.pomodorosPassed;\n    if(this.state.currentCounter === 'pomodoro') {\n      pomodorosPassed++;\n      this.setState({pomodorosPassed: pomodorosPassed});\n    }\n  }\n\n  setNextCounter() {\n    let nextCounter = '';\n    if(this.state.currentCounter === 'pomodoro') {\n      nextCounter = this.state.pomodorosPassed % 4 === 0 ? 'longBreak' : 'shortBreak';\n    } else {\n      nextCounter = 'pomodoro';\n    }\n    this.setState({\n      currentCounter: nextCounter,\n      currentCounterInitValue: this.state.counters[nextCounter].initValue,\n      timer: this.state.currentCounterInitValue,\n      startTime: this.state.currentCounterInitValue,\n    });\n  }\n\n  tick = () => {\n    if(this.state.isLoopCounter) {\n      this.handleLoop();\n    }\n    else if(!this.state.timer) {\n      clearInterval( this.interval)\n    } else {\n      this.setState({ timer: this.state.timer - 1 });\n    }\n  }\n  \n\tstartTimer = () => {\n    this.interval = setInterval(this.tick,1000);\n    this.setState({ paused: false,\n    isCountingDown: true });\n\t}\n  \n  stopTimer = () => {\n  \tclearInterval( this.interval );\n    this.setState({ \n      paused: true,\n      isCountingDown: false \n    });\n\t}\n  \n  reset = () => {\n    this.setState({ \n    timer: this.state.startTime,\n    paused: true,\n    isCountingDown:false,\n    });\n    clearInterval( this.interval );\n  }\n  \n  render() {\n    return (\n      <div className=\"timerContainer\">\n        <h5>Pomodoro Clock</h5>\n        <TimerOption pomodoroData={pomodoroData} onClick={this.handleClick}/>\n        <Countdown time={this.state.timer} />\n        <Control\n          paused={this.state.paused} \n          start={this.startTimer} \n          stop={this.stopTimer} \n        />\n        <Reset onClickReset={this.reset}/> \n      </div>\n    );\n  }\n}\n\nexport default PomodoroClock;"]},"metadata":{},"sourceType":"module"}