{"ast":null,"code":"import _objectSpread from \"/Users/vinsol/Documents/React_Exercises/React_Exercise_1/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/vinsol/Documents/React_Exercises/React_Exercise_1/src/pomodoro_clock.js\";\nimport React from 'react'; // const pomodoroData = {\n//   pomodoroText: \"Pomodoro\",\n//   shortBreakText: \"Short Break\",\n//   longBreakText: \"Long Break\",\n// }\n// function Button(props) {\n//   return (\n//     <li className=\"list\">\n//       <button>{props.buttonText}</button>\n//     </li>\n//   );\n// }\n// class TimerOption extends React.Component {\n//   renderButton(buttonText) {\n//    return <Button buttonText={buttonText} onClickHandler={} />\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <ul className=\"links\">\n//           {this.renderButton(this.props.pomodoroData.pomodoroText)}\n//           {this.renderButton(this.props.pomodoroData.shortBreakText)}\n//           {this.renderButton(this.props.pomodoroData.longBreakText)}\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n// function Countdown(props) {\n// \treturn (\n// \t\t<h1>\n// \t\t\t{props.time}\n// \t\t</h1>\n// \t);\n// };\n// function Reset(props) {\n// \treturn (\n// \t\t<button onClick={props.onClickReset} className=\"btn reset\">\n// \t\t\tReset\n// \t\t</button>\n// \t);\n// };\n// class Control extends React.Component {\n//   onClickHandler = () => {\n//     if(this.props.paused){\n//       this.props.start();\n//     }\n//     else{\n//       this.props.stop();\n//     }\n//   }\n// \trender() {\n// \t\treturn (\n// \t\t\t\t<button className={this.props.paused ? \"btn paused\" : \"btn play\"} onClick={this.onClickHandler}>\n// \t\t    \t{this.props.paused ? \"play\" : \"pause\"}\n// \t\t    </button>\n// \t\t);\n// \t}\n// }\n// class PomodoroClock extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { \n//       pomodoroTime: 25, \n//       shortBreak: 5,\n//       longBreak: 10,\n//       paused: true,\n//     };\n//     this.tick = this.tick.bind(this);\n//     this.startTimer = this.startTimer.bind(this);\n//     this.stopTimer = this.stopTimer.bind(this);\n//     this.reset = this.reset.bind(this);\n// \t}\n//   tick = () => {\n//     if(!this.state.timer) {\n//       clearInterval( this.interval)\n//     } else {\n//       this.setState({ timer: this.state.timer - 1 });\n//     }\n//   }\n// \tstartTimer = () => {\n// \t\tthis.interval = setInterval(this.tick,1000);\n//     this.setState({ paused: false });\n// \t}\n//   stopTimer = () => {\n//   \tclearInterval( this.interval );\n//     this.setState({ paused: true });\n// \t}\n//   reset = () => {\n//   \tthis.setState({ timer: `${this.state.startTime}`, paused: true });\n//     clearInterval( this.interval );\n//   }\n//   render() {\n//     return (\n//       <div className=\"timerContainer\">\n//         <TimerOption pomodoroData={pomodoroData}/>\n//         <Countdown time={this.state.timer} />\n//         <Control\n//           paused={this.state.paused} \n//           start={this.startTimer} \n//           stop={this.stopTimer} \n//         />\n//         <Reset onClickReset={this.reset}/> \n//       </div>\n//     );\n//   }\n// }\n\nclass PomodoroClock extends React.Component {\n  constructor() {\n    super();\n    this.setVisibleComponent = this.setVisibleComponent.bind(this);\n    this.startCounter = this.startCounter.bind(this);\n    this.stopCounter = this.stopCounter.bind(this);\n    this.resetCurrentCounter = this.resetCurrentCounter.bind(this);\n    this.decreaseCounterValue = this.decreaseCounterValue.bind(this);\n    this.modifyCounterInitValue = this.modifyCounterInitValue.bind(this);\n    this.state = {\n      visibleComponent: 'front',\n      counters: {\n        pomodoro: {\n          initValue: 1500,\n          name: 'pomodoro duration'\n        },\n        shortBreak: {\n          initValue: 300,\n          name: 'short break duration'\n        },\n        longBreak: {\n          initValue: 900,\n          name: 'long break duration'\n        }\n      },\n      currentCounter: '',\n      currentCounterInitValue: 0,\n      currentCounterValue: 0,\n      pomodorosPassed: 0,\n      intervalId: {},\n      isCountingDown: false\n    };\n  }\n\n  componentWillMount() {\n    const intervalId = setInterval(this.decreaseCounterValue, 1000);\n    const firstCounter = Object.keys(this.state.counters)[0];\n    this.setState({\n      intervalId: intervalId,\n      currentCounter: firstCounter,\n      currentCounterValue: this.state.counters[firstCounter].initValue,\n      currentCounterInitValue: this.state.counters[firstCounter].initValue\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n  setVisibleComponent(component) {\n    this.setState({\n      visibleComponent: component\n    });\n  }\n\n  decreaseCounterValue() {\n    if (this.state.isCountingDown) {\n      let counterValue = this.state.currentCounterValue;\n\n      if (counterValue > 0) {\n        this.setState({\n          currentCounterValue: counterValue - 1\n        });\n      } else {\n        this.stopCounter();\n        this.setCyclesPassed();\n        this.setNextCounter();\n      }\n    }\n  }\n\n  modifyCounterInitValue(name, value) {\n    let counters = _objectSpread({}, this.state.counters);\n\n    counters[name].initValue += value;\n    this.setState({\n      counters\n    });\n  }\n\n  startCounter() {\n    this.setState({\n      isCountingDown: true\n    });\n  }\n\n  stopCounter() {\n    this.setState({\n      isCountingDown: false\n    });\n  }\n\n  resetCurrentCounter() {\n    this.setState({\n      isCountingDown: false,\n      currentCounterValue: this.state.counters[this.state.currentCounter].initValue,\n      currentCounterInitValue: this.state.counters[this.state.currentCounter].initValue\n    });\n  }\n\n  setNextCounter() {\n    let nextCounter = '';\n\n    if (this.state.currentCounter === 'pomodoro') {\n      nextCounter = this.state.pomodorosPassed % 4 === 0 ? 'longBreak' : 'shortBreak';\n    } else {\n      nextCounter = 'pomodoro';\n    }\n\n    this.setState({\n      currentCounter: nextCounter,\n      currentCounterValue: this.state.counters[nextCounter].initValue,\n      currentCounterInitValue: this.state.counters[nextCounter].initValue\n    });\n  }\n\n  setCyclesPassed() {\n    let pomodorosPassed = this.state.pomodorosPassed;\n\n    if (this.state.currentCounter === 'pomodoro') {\n      pomodorosPassed++;\n      this.setState({\n        pomodorosPassed: pomodorosPassed\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(Front, {\n      is_visible: this.state.visibleComponent === 'front',\n      setVisibleComponent: this.setVisibleComponent,\n      counterValue: this.state.currentCounterValue,\n      counterInitValue: this.state.currentCounterInitValue,\n      startCounter: this.startCounter,\n      resetCurrentCounter: this.resetCurrentCounter,\n      stopCounter: this.stopCounter,\n      isCountingDown: this.state.isCountingDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(Back, {\n      is_visible: this.state.visibleComponent === 'back',\n      setVisibleComponent: this.setVisibleComponent,\n      counters: this.state.counters,\n      modifyCounterInitValue: this.modifyCounterInitValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Back extends React.Component {\n  renderSettingsElement(name, element) {\n    return React.createElement(\"div\", {\n      className: \"settings-element\",\n      key: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, element.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      className: \"setting-modify modify-up\",\n      onClick: () => this.props.modifyCounterInitValue(name, 60),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"span\", {\n      className: \"setting-value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, formatTime(element.initValue)), React.createElement(\"a\", {\n      href: \"#\",\n      className: \"setting-modify modify-down\",\n      onClick: () => this.props.modifyCounterInitValue(name, -60),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"\\xA0\")));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"app-back\",\n      className: this.props.is_visible ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"go-to-main-screen\",\n      onClick: () => this.props.setVisibleComponent('front'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"< back\"), React.createElement(\"div\", {\n      id: \"settings-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, Object.keys(this.props.counters).map(x => {\n      return this.renderSettingsElement(x, this.props.counters[x]);\n    })));\n  }\n\n}\n\nclass Front extends React.Component {\n  render() {\n    const degs = parseFloat(180 - this.props.counterValue * 100 / this.props.counterInitValue * 180 / 100, 2);\n    const fillStyles = {\n      transform: `rotate(${degs}deg)`\n    };\n    const fixStyles = {\n      transform: `rotate(${degs * 2}deg)`\n    };\n    return React.createElement(\"div\", {\n      id: \"app-front\",\n      className: this.props.is_visible ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"go-to-settings\",\n      onClick: () => this.props.setVisibleComponent('back'),\n      className: \"fa fa-cog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"button\", {\n      id: \"start-stop\",\n      className: \"btn\",\n      onClick: () => this.props.isCountingDown ? this.props.stopCounter() : this.props.startCounter(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, this.props.isCountingDown ? 'pause' : 'start'), React.createElement(\"button\", {\n      id: \"reset\",\n      className: \"btn\",\n      onClick: () => this.props.resetCurrentCounter(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"reset\"), React.createElement(\"div\", {\n      id: \"main-counter\",\n      className: \"radial-progress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mask full\",\n      style: fillStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fill\",\n      style: fillStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"\\xA0\")), React.createElement(\"div\", {\n      className: \"mask half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fill\",\n      style: fillStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"div\", {\n      className: \"fill fix\",\n      style: fixStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"\\xA0\")), React.createElement(\"div\", {\n      className: \"inset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"div\", {\n      className: \"counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, formatTime(this.props.counterValue)))));\n  }\n\n}\n\nfunction formatTime(t) {\n  let minutes = parseInt(t / 60, 0);\n  let seconds = t % 60;\n  seconds = seconds < 10 ? '0' + seconds : seconds;\n  minutes = minutes < 10 ? '0' + minutes : minutes;\n  return `${minutes}:${seconds}`;\n}\n\nexport default PomodoroClock;","map":{"version":3,"sources":["/Users/vinsol/Documents/React_Exercises/React_Exercise_1/src/pomodoro_clock.js"],"names":["React","PomodoroClock","Component","constructor","setVisibleComponent","bind","startCounter","stopCounter","resetCurrentCounter","decreaseCounterValue","modifyCounterInitValue","state","visibleComponent","counters","pomodoro","initValue","name","shortBreak","longBreak","currentCounter","currentCounterInitValue","currentCounterValue","pomodorosPassed","intervalId","isCountingDown","componentWillMount","setInterval","firstCounter","Object","keys","setState","componentWillUnmount","clearInterval","component","counterValue","setCyclesPassed","setNextCounter","value","nextCounter","render","Back","renderSettingsElement","element","props","formatTime","is_visible","map","x","Front","degs","parseFloat","counterInitValue","fillStyles","transform","fixStyles","t","minutes","parseInt","seconds"],"mappings":"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","sourcesContent":["import React from 'react';\n\n// const pomodoroData = {\n//   pomodoroText: \"Pomodoro\",\n//   shortBreakText: \"Short Break\",\n//   longBreakText: \"Long Break\",\n// }\n\n// function Button(props) {\n//   return (\n//     <li className=\"list\">\n//       <button>{props.buttonText}</button>\n//     </li>\n//   );\n// }\n\n// class TimerOption extends React.Component {\n//   renderButton(buttonText) {\n//    return <Button buttonText={buttonText} onClickHandler={} />\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <ul className=\"links\">\n//           {this.renderButton(this.props.pomodoroData.pomodoroText)}\n//           {this.renderButton(this.props.pomodoroData.shortBreakText)}\n//           {this.renderButton(this.props.pomodoroData.longBreakText)}\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n\n// function Countdown(props) {\n// \treturn (\n// \t\t<h1>\n// \t\t\t{props.time}\n// \t\t</h1>\n// \t);\n// };\n\n// function Reset(props) {\n// \treturn (\n// \t\t<button onClick={props.onClickReset} className=\"btn reset\">\n// \t\t\tReset\n// \t\t</button>\n// \t);\n// };\n\n// class Control extends React.Component {\n//   onClickHandler = () => {\n//     if(this.props.paused){\n//       this.props.start();\n//     }\n//     else{\n//       this.props.stop();\n//     }\n//   }\n// \trender() {\n// \t\treturn (\n// \t\t\t\t<button className={this.props.paused ? \"btn paused\" : \"btn play\"} onClick={this.onClickHandler}>\n// \t\t    \t{this.props.paused ? \"play\" : \"pause\"}\n// \t\t    </button>\n// \t\t);\n// \t}\n// }\n\n// class PomodoroClock extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { \n//       pomodoroTime: 25, \n//       shortBreak: 5,\n//       longBreak: 10,\n//       paused: true,\n//     };\n//     this.tick = this.tick.bind(this);\n//     this.startTimer = this.startTimer.bind(this);\n//     this.stopTimer = this.stopTimer.bind(this);\n//     this.reset = this.reset.bind(this);\n// \t}\n\n//   tick = () => {\n//     if(!this.state.timer) {\n//       clearInterval( this.interval)\n//     } else {\n//       this.setState({ timer: this.state.timer - 1 });\n//     }\n//   }\n  \n// \tstartTimer = () => {\n// \t\tthis.interval = setInterval(this.tick,1000);\n//     this.setState({ paused: false });\n// \t}\n  \n//   stopTimer = () => {\n//   \tclearInterval( this.interval );\n//     this.setState({ paused: true });\n// \t}\n  \n//   reset = () => {\n//   \tthis.setState({ timer: `${this.state.startTime}`, paused: true });\n//     clearInterval( this.interval );\n//   }\n//   render() {\n//     return (\n//       <div className=\"timerContainer\">\n//         <TimerOption pomodoroData={pomodoroData}/>\n//         <Countdown time={this.state.timer} />\n//         <Control\n//           paused={this.state.paused} \n//           start={this.startTimer} \n//           stop={this.stopTimer} \n//         />\n//         <Reset onClickReset={this.reset}/> \n//       </div>\n//     );\n//   }\n// }\n\nclass PomodoroClock extends React.Component {\n  constructor() {\n      super();\n      this.setVisibleComponent = this.setVisibleComponent.bind(this);\n      this.startCounter = this.startCounter.bind(this);\n      this.stopCounter = this.stopCounter.bind(this);\n      this.resetCurrentCounter = this.resetCurrentCounter.bind(this);\n      this.decreaseCounterValue = this.decreaseCounterValue.bind(this);\n      this.modifyCounterInitValue = this.modifyCounterInitValue.bind(this);\n      this.state = {\n          visibleComponent: 'front',\n          counters: {\n              pomodoro: {\n                  initValue: 1500,\n                  name: 'pomodoro duration'\n              },\n              shortBreak: {\n                  initValue: 300,\n                  name: 'short break duration'\n              },\n              longBreak: {\n                  initValue: 900,\n                  name: 'long break duration'\n              }\n          },\n          currentCounter: '',\n          currentCounterInitValue: 0,\n          currentCounterValue: 0,\n          pomodorosPassed: 0,\n          intervalId: {},\n          isCountingDown: false\n      };\n  }\n\n  componentWillMount() {\n      const intervalId = setInterval(this.decreaseCounterValue, 1000);\n      const firstCounter = Object.keys(this.state.counters)[0];\n      this.setState({\n          intervalId: intervalId,\n          currentCounter: firstCounter,\n          currentCounterValue: this.state.counters[firstCounter].initValue,\n          currentCounterInitValue: this.state.counters[firstCounter].initValue\n      });\n  }\n\n  componentWillUnmount() {\n      clearInterval(this.state.intervalId);\n  }\n\n  setVisibleComponent(component) {\n      this.setState({visibleComponent:component});\n  }\n\n  decreaseCounterValue() {\n      if(this.state.isCountingDown) {\n          let counterValue = this.state.currentCounterValue;\n          if(counterValue > 0) {\n              this.setState({currentCounterValue: counterValue - 1});\n          } else {\n              this.stopCounter();\n              this.setCyclesPassed();\n              this.setNextCounter();\n          }\n      }\n  }\n\n  modifyCounterInitValue(name, value) {\n      let counters = {...this.state.counters};\n      counters[name].initValue += value;\n      this.setState({counters});\n  }\n\n  startCounter() {\n      this.setState({isCountingDown:true});\n  }\n\n  stopCounter() {\n      this.setState({isCountingDown:false});\n  }\n\n  resetCurrentCounter() {\n      this.setState({\n          isCountingDown:false,\n          currentCounterValue: this.state.counters[this.state.currentCounter].initValue,\n          currentCounterInitValue: this.state.counters[this.state.currentCounter].initValue\n      });\n  }\n\n  setNextCounter() {\n      let nextCounter = '';\n      if(this.state.currentCounter === 'pomodoro') {\n          nextCounter = this.state.pomodorosPassed % 4 === 0 ? 'longBreak' : 'shortBreak';\n      } else {\n          nextCounter = 'pomodoro';\n      }\n      this.setState({\n          currentCounter:nextCounter,\n          currentCounterValue: this.state.counters[nextCounter].initValue,\n          currentCounterInitValue: this.state.counters[nextCounter].initValue\n      });\n  }\n\n  setCyclesPassed() {\n      let pomodorosPassed = this.state.pomodorosPassed;\n      if(this.state.currentCounter === 'pomodoro') {\n          pomodorosPassed++;\n          this.setState({pomodorosPassed: pomodorosPassed});\n      }\n  }\n\n  render() {\n      return(\n          <div>\n              <Front\n                  is_visible={this.state.visibleComponent === 'front'}\n                  setVisibleComponent={this.setVisibleComponent}\n                  counterValue={this.state.currentCounterValue}\n                  counterInitValue={this.state.currentCounterInitValue}\n                  startCounter={this.startCounter}\n                  resetCurrentCounter={this.resetCurrentCounter}\n                  stopCounter={this.stopCounter}\n                  isCountingDown={this.state.isCountingDown}\n              />\n              <Back\n                  is_visible={this.state.visibleComponent === 'back'}\n                  setVisibleComponent={this.setVisibleComponent}\n                  counters={this.state.counters}\n                  modifyCounterInitValue={this.modifyCounterInitValue}\n              />\n          </div>\n      );\n  }\n}\n\nclass Back extends React.Component {\n\n  renderSettingsElement(name, element) {\n      return(\n          <div className=\"settings-element\" key={name}>\n              <h5>{element.name}</h5>\n              <div>\n                  <a href=\"#\"\n                     className=\"setting-modify modify-up\"\n                     onClick={() => this.props.modifyCounterInitValue(name, 60)}\n                  >\n                      &nbsp;\n                  </a>\n                  <span className=\"setting-value\">{formatTime(element.initValue)}</span>\n                  <a href=\"#\"\n                     className=\"setting-modify modify-down\"\n                     onClick={() => this.props.modifyCounterInitValue(name, -60)}\n                  >\n                      &nbsp;\n                  </a>\n              </div>\n          </div>\n      );\n  }\n\n  render() {\n      return(\n          <div id=\"app-back\" className={this.props.is_visible ? 'active' : ''}>\n              <span id=\"go-to-main-screen\" onClick={() => this.props.setVisibleComponent('front')}>&lt; back</span>\n              <div id=\"settings-container\">\n                  {Object.keys(this.props.counters).map((x) => {\n                      return this.renderSettingsElement(x, this.props.counters[x]);\n                  })}\n              </div>\n          </div>\n      );\n  }\n}\n\nclass Front extends React.Component {\n\n  render() {\n\n      const degs = parseFloat(180 - (((this.props.counterValue * 100) / this.props.counterInitValue) * 180) / 100, 2);\n\n      const fillStyles = {\n          transform: `rotate(${degs}deg)`\n      };\n\n      const fixStyles = {\n          transform: `rotate(${degs * 2}deg)`\n      };\n\n      return(\n          <div id=\"app-front\" className={this.props.is_visible ? 'active' : ''}>\n              <span id=\"go-to-settings\" onClick={() => this.props.setVisibleComponent('back')} className=\"fa fa-cog\">&nbsp;</span>\n              <button id=\"start-stop\"\n                      className=\"btn\"\n                      onClick={() => this.props.isCountingDown ? this.props.stopCounter() : this.props.startCounter()}\n              >\n                  {this.props.isCountingDown ? 'pause' : 'start'}\n              </button>\n              <button id=\"reset\"\n                      className=\"btn\"\n                      onClick={() => this.props.resetCurrentCounter()}\n              >\n                  reset\n              </button>\n              <div id=\"main-counter\" className=\"radial-progress\">\n                  <div className=\"circle\">\n                      <div className=\"mask full\" style={fillStyles}>\n                          <div className=\"fill\" style={fillStyles}>&nbsp;</div>\n                      </div>\n                      <div className=\"mask half\">\n                          <div className=\"fill\" style={fillStyles}>&nbsp;</div>\n                          <div className=\"fill fix\" style={fixStyles}>&nbsp;</div>\n                      </div>\n                      <div className=\"inset\">&nbsp;</div>\n                      <div className=\"counter\">{formatTime(this.props.counterValue)}</div>\n                  </div>\n              </div>\n          </div>\n\n      );\n  }\n}\n\nfunction formatTime(t) {\n  let minutes = parseInt(t / 60, 0);\n  let seconds = t % 60;\n  seconds =  seconds < 10 ? '0' + seconds : seconds;\n  minutes =  minutes < 10 ? '0' + minutes : minutes;\n  return `${minutes}:${seconds}`;\n}\n\nexport default PomodoroClock;"]},"metadata":{},"sourceType":"module"}