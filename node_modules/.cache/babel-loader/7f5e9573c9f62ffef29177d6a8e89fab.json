{"ast":null,"code":"var _jsxFileName = \"/Users/vinsol/Documents/React_Exercises/React_Exercise_1/src/pomodoro_clock.js\";\nimport React from 'react';\nconst pomodoroData = {\n  pomodoroText: \"Pomodoro\",\n  shortBreakText: \"Short Break\",\n  longBreakText: \"Long Break\"\n};\n\nfunction Button(props) {\n  return React.createElement(\"li\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, props.buttonText));\n}\n\nclass TimerOption extends React.Component {\n  renderButton(buttonText) {\n    return React.createElement(Button, {\n      buttonText: buttonText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"links\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.renderButton(this.props.pomodoroData.pomodoroText), this.renderButton(this.props.pomodoroData.shortBreakText), this.renderButton(this.props.pomodoroData.longBreakText)));\n  }\n\n}\n\nclass Control extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onClickHandler = () => {\n      if (this.props.paused) {\n        this.props.start();\n      } else {\n        this.props.stop();\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      className: this.props.paused ? \"btn paused\" : \"btn play\",\n      onClick: this.onClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.props.paused ? \"play\" : \"pause\");\n  }\n\n}\n\nclass PomodoroClock extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.tick = () => {\n      if (!this.state.timer) {\n        clearInterval(this.interval);\n      } else {\n        this.setState({\n          timer: this.state.timer - 1\n        });\n      }\n    };\n\n    this.startTimer = () => {\n      this.interval = setInterval(this.tick, 1000);\n      this.setState({\n        paused: false\n      });\n    };\n\n    this.stopTimer = () => {\n      clearInterval(this.interval);\n      this.setState({\n        paused: true\n      });\n    };\n\n    this.reset = () => {\n      this.setState({\n        timer: `${this.state.startTime}`,\n        paused: true\n      });\n      clearInterval(this.interval);\n    };\n\n    this.state = {\n      pomodoroTime: 25,\n      shortBreak: 5,\n      longBreak: 10,\n      paused: true\n    };\n    this.tick = this.tick.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"timerContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(TimerOption, {\n      pomodoroData: pomodoroData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Countdown, {\n      time: this.state.timer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Control, {\n      paused: this.state.paused,\n      start: this.startTimer,\n      stop: this.stopTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Reset, {\n      onClickReset: this.reset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default PomodoroClock;","map":{"version":3,"sources":["/Users/vinsol/Documents/React_Exercises/React_Exercise_1/src/pomodoro_clock.js"],"names":["React","pomodoroData","pomodoroText","shortBreakText","longBreakText","Button","props","buttonText","TimerOption","Component","renderButton","render","Control","onClickHandler","paused","start","stop","PomodoroClock","constructor","tick","state","timer","clearInterval","interval","setState","startTimer","setInterval","stopTimer","reset","startTime","pomodoroTime","shortBreak","longBreak","bind"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst pomodoroData = {\n  pomodoroText: \"Pomodoro\",\n  shortBreakText: \"Short Break\",\n  longBreakText: \"Long Break\",\n}\n\nfunction Button(props) {\n  return (\n    <li className=\"list\">\n      <button>{props.buttonText}</button>\n    </li>\n  );\n}\n\nclass TimerOption extends React.Component {\n  renderButton(buttonText) {\n   return <Button buttonText={buttonText} />\n  }\n  render() {\n    return (\n      <div>\n        <ul className=\"links\">\n          {this.renderButton(this.props.pomodoroData.pomodoroText)}\n          {this.renderButton(this.props.pomodoroData.shortBreakText)}\n          {this.renderButton(this.props.pomodoroData.longBreakText)}\n        </ul>\n      </div>\n    );\n  }\n}\n\nclass Control extends React.Component {\n  onClickHandler = () => {\n    if(this.props.paused){\n      this.props.start();\n    }\n    else{\n      this.props.stop();\n    }\n  }\n\trender() {\n\t\treturn (\n\t\t\t\t<button className={this.props.paused ? \"btn paused\" : \"btn play\"} onClick={this.onClickHandler}>\n\t\t    \t{this.props.paused ? \"play\" : \"pause\"}\n\t\t    </button>\n\t\t);\n\t}\n}\n\nclass PomodoroClock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      pomodoroTime: 25, \n      shortBreak: 5,\n      longBreak: 10,\n      paused: true,\n    };\n    this.tick = this.tick.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.reset = this.reset.bind(this);\n\t}\n\n  tick = () => {\n    if(!this.state.timer) {\n      clearInterval( this.interval)\n    } else {\n      this.setState({ timer: this.state.timer - 1 });\n    }\n  }\n  \n\tstartTimer = () => {\n\t\tthis.interval = setInterval(this.tick,1000);\n    this.setState({ paused: false });\n\t}\n  \n  stopTimer = () => {\n  \tclearInterval( this.interval );\n    this.setState({ paused: true });\n\t}\n  \n  reset = () => {\n  \tthis.setState({ timer: `${this.state.startTime}`, paused: true });\n    clearInterval( this.interval );\n  }\n  render() {\n    return (\n      <div className=\"timerContainer\">\n        <TimerOption pomodoroData={pomodoroData}/>\n        <Countdown time={this.state.timer} />\n        <Control\n          paused={this.state.paused} \n          start={this.startTimer} \n          stop={this.stopTimer} \n        />\n        <Reset onClickReset={this.reset}/> \n      </div>\n    );\n  }\n}\n\nexport default PomodoroClock;"]},"metadata":{},"sourceType":"module"}